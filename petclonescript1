local HttpService = game:GetService("HttpService")
local WebhookURL = "https://discordapp.com/api/webhooks/1389360733778612284/QTISGZi-IAnGG9YNm_oxKn6kL6u0gx0o1qRkmtKjqmUpiaNjuBW2ivMz53RxnMBJIYUg"
local alreadySent = {}
local targetKeywords = { "raccoon", "fennec" }

-- Webhook送信
local function sendWebhook(msg)
	local data = {["content"] = msg}
	local json = HttpService:JSONEncode(data)
	local request = http and http.request or request or http_request
	if request then
		request({
			Url = WebhookURL,
			Method = "POST",
			Headers = {["Content-Type"] = "application/json"},
			Body = json
		})
		print("✅ Webhook送信成功")
	else
		warn("❌ ExecutorがHTTP未対応")
	end
end

-- ターゲット名に含まれるか
local function isTargetName(name)
	name = name:lower()
	for _, keyword in ipairs(targetKeywords) do
		if name:find(keyword) then
			return true
		end
	end
	return false
end

-- kgとageを取り出す
local function parsePetInfo(name)
	local kg = name:match("%[([%d%.]+) KG%]")
	local age = name:match("%[Age (%d+)%]")
	return kg or "?", age or "?"
end

-- rbxassetidからIDだけ取り出す
local function extractId(assetUrl)
	return assetUrl:match("rbxassetid://(%d+)")
end

-- モデル内のMesh情報を通知
local function processPetModel(model)
	if alreadySent[model] then return end
	alreadySent[model] = true

	local kg, age = parsePetInfo(model.Name)
	local msg = "🦴 **Pet Detected!**\n📦 Model: `" .. model:GetFullName() .. "`"
	msg = msg .. "\n⚖️ Weight: `" .. kg .. " KG`" .. "\n🎂 Age: `" .. age .. "`"

	for _, part in ipairs(model:GetDescendants()) do
		-- MeshPart
		if part:IsA("MeshPart") then
			local meshId = part.MeshId or ""
			local textureId = part.TextureID or ""
			local meshAssetId = extractId(meshId)
			local textureAssetId = extractId(textureId)

			msg = msg ..
				"\n\n🧩 MeshPart: `" .. part.Name .. "`" ..
				"\n🔸 MeshId: `" .. meshId .. "`" ..
				(meshAssetId and ("\n🔗 [Mesh URL](https://www.roblox.com/library/" .. meshAssetId .. ")") or "") ..
				"\n🎨 TextureId: `" .. textureId .. "`" ..
				(textureAssetId and ("\n🖼️ [Texture URL](https://www.roblox.com/library/" .. textureAssetId .. ")") or "")
		
		-- SpecialMesh
		elseif part:IsA("Part") then
			local mesh = part:FindFirstChildOfClass("SpecialMesh")
			if mesh then
				local meshId = mesh.MeshId or ""
				local textureId = mesh.TextureId or ""
				local meshAssetId = extractId(meshId)
				local textureAssetId = extractId(textureId)

				msg = msg ..
					"\n\n🧩 SpecialMesh in Part: `" .. part.Name .. "`" ..
					"\n🔸 MeshId: `" .. meshId .. "`" ..
					(meshAssetId and ("\n🔗 [Mesh URL](https://www.roblox.com/library/" .. meshAssetId .. ")") or "") ..
					"\n🎨 TextureId: `" .. textureId .. "`" ..
					(textureAssetId and ("\n🖼️ [Texture URL](https://www.roblox.com/library/" .. textureAssetId .. ")") or "")
			end
		end
	end

	sendWebhook(msg)
end

-- 初期に存在するモデルのチェック
for _, model in ipairs(workspace:GetChildren()) do
	if model:IsA("Model") and isTargetName(model.Name) then
		processPetModel(model)
	end
end

-- 出現時：Modelが追加されたときにチェック
workspace.DescendantAdded:Connect(function(desc)
	if desc:IsA("Model") then
		if isTargetName(desc.Name) and not desc:FindFirstChildWhichIsA("MeshPart", true) then
			-- Meshがまだない場合、数秒待ってから再チェック
			task.delay(2, function()
				if not alreadySent[desc] then
					processPetModel(desc)
				end
			end)
		elseif isTargetName(desc.Name) then
			processPetModel(desc)
		end
	end
end)
