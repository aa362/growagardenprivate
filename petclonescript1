local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

local WebhookURL = "https://discordapp.com/api/webhooks/1389360733778612284/QTISGZi-IAnGG9YNm_oxKn6kL6u0gx0o1qRkmtKjqmUpiaNjuBW2ivMz53RxnMBJIYUg"
local player = Players.LocalPlayer
local alreadySent = {}

-- 🐾 検出したいキーワードをここに追加（小文字でOK）
local targetKeywords = { "fennec", "raccoon" }

-- Webhook送信関数（Krnl用）
local function sendWebhook(msg)
	local data = {["content"] = msg}
	local json = HttpService:JSONEncode(data)

	local request = http and http.request or request or http_request
	if request then
		request({
			Url = WebhookURL,
			Method = "POST",
			Headers = {["Content-Type"] = "application/json"},
			Body = json
		})
	else
		warn("❌ ExecutorがHTTPに対応していません")
	end
end

-- モデル名がターゲットキーワードにマッチするか確認
local function isTargetModel(name)
	name = name:lower()
	for _, keyword in ipairs(targetKeywords) do
		if name:find(keyword) then
			return true
		end
	end
	return false
end

-- 出現したモデルをチェック
local function checkModel(model)
	if model:IsA("Model") and isTargetModel(model.Name) and not alreadySent[model] then
		alreadySent[model] = true

		local msg = "🐾 **ペット検出！**\nModel: `" .. model:GetFullName() .. "`"
		for _, part in ipairs(model:GetDescendants()) do
			if part:IsA("MeshPart") then
				msg = msg ..
					"\n\n🔹 Part: `" .. part.Name .. "`" ..
					"\n🔸 MeshId: `" .. part.MeshId .. "`" ..
					"\n🎨 TextureId: `" .. part.TextureID .. "`"
			end
		end

		sendWebhook(msg)
	end
end

-- 起動時に既存モデルもチェック
for _, obj in ipairs(workspace:GetChildren()) do
	checkModel(obj)
end

-- 出現監視（軽量）
workspace.ChildAdded:Connect(checkModel)
